// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:flutter_config/flutter_config.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }
  //todo this should be extracted to a .env as well
  static FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyB332_pe6xJNcLXIU9i4X6s-RXvMUFSdeM',
    appId: FlutterConfig.get("ANDROID_APP_ID"),
    messagingSenderId: '364436864658',
    projectId: 'trackauthoritymusic',
    databaseURL: 'https://trackauthoritymusic.firebaseio.com',
    storageBucket: 'trackauthoritymusic.appspot.com',
  );
  
  //todo this should be extracted to a .env as well
  static FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyDkC-fC6GLFpkqbDtcrh1oT1px5ZCeBZvY',
    appId: FlutterConfig.get("IOS_APP_ID"),
    messagingSenderId: '364436864658',
    projectId: 'trackauthoritymusic',
    databaseURL: 'https://trackauthoritymusic.firebaseio.com',
    storageBucket: 'trackauthoritymusic.appspot.com',
    androidClientId: FlutterConfig.get("ANDROID_CLIENT_ID"),
    iosClientId: FlutterConfig.get("IOS_CLIENT_ID"),
    iosBundleId: FlutterConfig.get("APP_PACKAGE_ID"),
  );
}
